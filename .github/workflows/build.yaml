# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Indraw.gy Build ðŸ–Š

on:
  push:
    branches: ["main", "worflow-testing"]
  pull_request:
    branches: ["main"]

jobs:
  build-angular:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: "npm"
          cache-dependency-path: ./Frontend/package-lock.json
      - run: npm ci
        working-directory: ./Frontend
      - run: npm run build --if-present
        working-directory: ./Frontend

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          # Artifact name
          name: dist
          # A file, directory or wildcard pattern that describes what to upload
          path: ./Frontend/dist
          # The desired behavior if no files are found using the provided path.
  build-dotnet:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v2.1.0
      - run: dotnet build
        working-directory: ./Backend
      - name: Publish
        run: dotnet publish -c Release -o indrawgy-backend
        working-directory: ./Backend
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          name: indrawgy-backend
          path: ./Backend/indrawgy-backend/**
          if-no-files-found: error
  publish-to-server:
    runs-on: ubuntu-latest
    needs: [build-angular, build-dotnet]
    steps:
      - name: Delete old build
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSHKEY }}
          port: ${{ secrets.PORT }}
          script: rm -r /var/www/indrawgy/*
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: dist
      - name: Publish
        uses: nogsantos/scp-deploy@master
        with:
          src: ./*
          host: ${{ secrets.HOST }}
          remote: ${{ secrets.DIR }}
          port: ${{ secrets.PORT }}
          user: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSHKEY }}
